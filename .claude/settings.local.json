{
  "permissions": {
    "allow": [
      "Bash(cargo check:*)",
      "Bash(cargo test:*)",
      "Bash(build.bat)",
      "Bash(cmd /c:*)",
      "Bash(cargo --version)",
      "Bash(rustc --version)",
      "Bash(cargo build:*)",
      "Bash(paradigm-core.exe:*)",
      "Bash(./paradigm-core.exe --help)",
      "Bash(./paradigm-wallet.exe --help)",
      "Bash(set BUILD_DIR=targetparadigm-release-test)",
      "Bash(mkdir \"%BUILD_DIR%\")",
      "Bash(mkdir \"%BUILD_DIR%\\config\")",
      "Bash(mkdir \"%BUILD_DIR%\\docs\")",
      "Bash(dir \"%BUILD_DIR%\")",
      "Bash(.build.bat)",
      "Bash(./build.bat)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(timeout 60s cargo check --package paradigm-sdk)",
      "Bash(chmod:*)",
      "Bash(timeout 60s cargo check --package paradigm-core)",
      "Bash(timeout 30s cargo check --package paradigm-core)",
      "Bash(timeout 20s cargo check --package paradigm-core)",
      "Bash(timeout:*)",
      "Bash(cargo metadata:*)",
      "Bash(./paradigm-core.exe)",
      "Bash(sqlite3:*)",
      "Bash(move QUICKSTART.md PRODUCTION.md ADVANCED_TOKENOMICS_IMPLEMENTATION.md ADVANCED_FEATURES_DEMO.md TESTING_DOCUMENTATION.md NETWORK_ANALYTICS_SUMMARY.md CONTRIBUTING.md NETWORK_SETUP_GUIDE.md QUICK_START.md release-package.md START-NETWORK.md docs)",
      "Bash(if not exist target\\paradigm-release mkdir target\\paradigm-release)",
      "Bash(copy target\\release\\paradigm-core.exe target\\paradigm-release\\ )",
      "Bash(if exist \"target\\paradigm-release\\paradigm-core.exe\" echo \"File exists\")",
      "Bash(rm:*)",
      "Bash(cargo fmt:*)",
      "Bash(cargo audit:*)",
      "Bash(cargo install:*)",
      "Bash(cargo:*)",
      "Bash(tasklist)",
      "Bash(taskkill:*)",
      "Bash(./paradigm-core-with-addnode.exe --help)",
      "Bash(target/debug/paradigm-core.exe:*)",
      "Bash(target/debug/paradigm-contributor.exe:*)",
      "Bash(./genesis-init.bat)",
      "Bash(./setup-release.bat)",
      "Bash(./test-release.bat)",
      "Bash(..paradigm-core.exe --config network-config.toml --genesis genesis-config.toml --data-dir ./genesis-data --enable-api --api-port 8080)",
      "Bash(../paradigm-core.exe --config network-config.toml --genesis genesis-config.toml --data-dir ./genesis-data --enable-api --api-port 8080)",
      "Bash(../paradigm-core.exe --data-dir ./genesis-data --enable-api --api-port 8080)",
      "Bash(./genesis-init-simple.bat)",
      "Bash(./test-payout.bat)",
      "Bash(./target/debug/paradigm-wallet.exe help)",
      "Read(/C:\\Users\\aseio\\documents\\.source\\Paradigm[CC]\\paradigm-core\\src/**)",
      "Read(/C:\\Users\\aseio\\documents\\.source\\Paradigm[CC]\\paradigm-wallet\\src/**)",
      "Read(/C:\\Users\\aseio\\documents\\.source\\Paradigm[CC]\\paradigm-wallet/**)",
      "Read(/C:\\Users\\aseio\\documents\\.source\\Paradigm[CC]\\paradigm-contributor\\src/**)",
      "Bash(rustc:*)",
      "Bash(copy paradigm-core.exe paradigm-core-new.exe)",
      "Bash(grep:*)",
      "Bash(target/release/paradigm-core.exe:*)",
      "Bash(target/release/paradigm-wallet.exe:*)",
      "Bash(target/release/paradigm-contributor.exe --help)",
      "Bash(target/release/paradigm-contributor.exe --node-address 127.0.0.1:8080 --verbose)",
      "Bash(curl:*)",
      "WebFetch(domain:github.com)",
      "Read(C:\\Users\\aseio\\Documents\\.source\\Paradigm[CC]\\paradigm-core\\src/**)",
      "Read(C:\\Users\\aseio\\Documents\\.source\\Paradigm[CC]\\paradigm-core\\src/**)",
      "Bash(find:*)",
      "Read(C:\\c\\Users\\aseio\\Documents\\.source/**)",
      "Read(C:\\c\\Users\\aseio\\Documents\\.source/**)",
      "Bash(sed:*)",
      "Bash(npm install)",
      "Read(C:\\Users\\aseio\\Documents\\.source\\Paradigm[CC]\\snt-web\\src\\components/**)",
      "Read(C:\\Users\\aseio\\Documents\\.source\\Paradigm[CC]\\snt-web\\src/**)",
      "Read(C:\\Users\\aseio\\Documents\\.source\\Paradigm[CC]\\snt-web\\src/**)",
      "Bash(npm start)",
      "Bash(PORT=3001 npm start)",
      "Bash(target/release/snt-demo.exe --mode showcase)",
      "Bash(target/release/snt-demo.exe --help)",
      "Bash(target/release/snt-demo.exe showcase)",
      "Bash(.quick-start.bat)",
      "Bash(if not exist data mkdir data)",
      "Bash(if not exist datanode1 mkdir datanode1)",
      "Bash(target/release/paradigm-contributor.exe --node-address 127.0.0.1:8080 --data-dir ./data/contributor1 --verbose)",
      "Bash(target/release/paradigm-contributor.exe --node-address 127.0.0.1:8080 --data-dir ./data/contributor2 --verbose)",
      "Bash(PORT=3002 npm start)",
      "Bash(npm install:*)",
      "Bash(HOST=0.0.0.0 PORT=3002 npm start)",
      "Bash(HOST=0.0.0.0 PORT=3003 npm start)",
      "Bash(targetreleaseparadigm-wallet.exe --help)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" --help)",
      "Bash(python:*)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" list)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" create repo_storage_wallet)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" send test-wallet PAR5c9c32a4cdd5d05f419601652b8468777f2150c9 10 REPO_FUND)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" send PAR0f712155e6854680ffe2fbfe030eb8bd4bd6e087 PAR5c9c32a4cdd5d05f419601652b8468777f2150c9 10 REPO_FUND)",
      "Bash(\"taskkill\" \"/f\" \"/im\" \"paradigm-core.exe\")",
      "Bash(./quick-start.bat)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" network-status)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" balance PAR5c9c32a4cdd5d05f419601652b8468777f2150c9)",
      "Bash(\"target\\release\\paradigm-wallet.exe\" send PAR0f712155e6854680ffe2fbfe030eb8bd4bd6e087 PAR5c9c32a4cdd5d05f419601652b8468777f2150c9 10.5)",
      "Bash(copy targetreleaseparadigm-core.exe paradigm-core-backup.exe)",
      "Read(C:\\Users\\aseio\\Documents\\.Source\\Paradigm[cc]\\paradigm-core/**)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow run:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\"
    ]
  }
}